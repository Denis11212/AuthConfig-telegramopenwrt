#!/bin/sh

# Классно было бы вообще в LuCI интегрировать хотя бы такой функционал для начала, но я не умею этого делать. Так что если кто-то умеет, то вот вам идея. Ну и на русский язык бы перевести Telegram Scripts for OpenWrt, это уже, надеюсь, в моих силах, но если будет время и желание.

# Инициализация переменных
config_file="/etc/config/telegramopenwrt" # Файл хранения данных Telegram Scripts for OpenWrt
app_name='telegram-openwrt - 1.1.1-1'
ipk_app='telegram-openwrt_1.1.1-1_all.ipk' # Название приложения
package_link='https://github.com/alexwbaule/telegramopenwrt/releases/latest/download/telegram-openwrt_1.1.1-1_all.ipk'
programs="curl grep sed jq" # перечисляю через пробел приложения, которые должны быть установлены.

checkPrograms() {
for program in $programs; do
    if ! command -v "$program" > /dev/null; then
        echo "Программа $program не установлена. Пожалуйста, установите её. Например, для установки можно использовать следующую команду: \$opkg install $program"
        exit 1
    fi
done
}

# проверка на root права у пользователя. Круто будет, если проще получится.
isRoot() {
  if [ $(id -u) -ne 0 ]; then
    echo "Скрипт должен запускаться от имени root или другого пользователя с привилегиями суперпользователя. Например, $ sudo "$0""
    exit 1
  fi
}

check_install() {
if ! [ -f "$config_file" ]; then
	echo "Файл $config_file не найден."
	install_tgbot
elif ! opkg list | grep -q "$app_name"; then
	echo "Пакет $app_name не обнаружен в системе."
	install_tgbot
fi
}

show_help() {
    cat << EOF
Использование: $(basename $0) [ОПЦИЯ1] [ОПЦИЯ2]

Описание: Этот скрипт умеет скачивать и устанавливать приложение Telegram Scripts for OpenWrt с официального источника, а также производить интеграцию в приложение данных вашего бота, тем самым привязав его к опевещалке. Так, скрипт способен, например, определять CHAT_ID по вашему BOT_ID. Для быстрого взаимодействия прикрутил сюда поддержку аргументов.
На всякий случай сообщаю, что я не являюсь автором Telegram Scripts for OpenWrt, поэтому все вопросы по работе конкретно Telegram Scripts for OpenWrt задавайте на его странице на GitHub: https://github.com/alexwbaule/telegramopenwrt. Я же просто написал скрипт для упрощения установки и настройки.
Официальная страница этого скрипта
На GitHub: 

Опции:
	-h, --help		Показать эту справку и выйти.

Примеры:
  sudo $(basename $0) токен_бота идентификатор_чата	Записать в $config_file новые данные о боте.
  $(basename $0) -h									Вывести справку
  
Краткая инструкция по использованию:
	Для любых действий по измнению данных файла $config_file нужны права суперпользователя, так как файл этот файл содержит данные Телеграмм бота, которые позволят получить доступ к телеграмм боту кому угодно. Все поддерживаемые аргументы перечислены в разделе "Опции". Если запускать скрипт без аргументов, то он сам всё что нужно для подключения к боту файла $config_file спросит. Для опытных пользователей имеется возможность быстро настроить файл $config_file, задав первым аргументом [ОПЦИЯ1], он же BOT_ID, он же токен бота, а вторым [ОПЦИЯ2], он же CHAT_ID, он же идентификатор чата отдельного пользователя. Впрочем, можно задать и только BOT_ID первым аргументом. Скрипт поймёт и будет пытаться определить CHAT_ID. Подробнее о CHAT_ID и BOT_ID читайте ниже.
	Это окно со справкой можно всегда вызвать командой $ "$0" -h после установки скрипта. Кстати, вывод справки не требует прав суперпользователя.

Немного о телеграмм ботах и конфеденциальности хранимых данных ботом
	Храните ваш BOT_TOKEN в секрете, так как он позволяет получить полный доступ к вашему боту! BOT_TOKEN состоит из двух частей: ID_бота:ключ_бота. Для доступа к данным бота используется команда, объединяющая ID и TOKEN. Соединив обе части в специальном url запросе, можно получить доступ ко всем перепискам бота за определённый период времени (насколько знаю, менее 24 часов), а также доступно будет 100 последних сообщений. Соотвественно, если кто-то овладеет вышеобозначенной информацией, а вернее, вашим BOT_TOKEN, то он сможет получить доступ ко всем данным, но, всё-таки будет скован вышеописанными ограничениями по времени хранения и количеству сообщений. Однако, никто не мешает вести логгирование сообщений после получения доступа к боту.
	Кстати, после удаления пакета $app_name через opkg или LuCI файл $config_file не удаляется, и выводится сообщение "Not deleting modified conffile /etc/config/telegramopenwrt", так что его нужно удалять руками.
	CHAT_ID является индивидуальным номером, и присваивается каждому новому пользователю. Любой телеграмм бот, которому вы пишите, получает ваш CHAT_ID. CHAT_ID обозначается в поле id каждого вашего сообщения, рядом с другой информацией, если вы её о себе сообщаете. Я не знаю, меняется ли CHAT_ID, но если и меняется, то крайне редко. А тот факт, что у более старых пользователей CHAT_ID более короткий, чем у новых, позволяет сделать предположение, что этот числовой идентификатор присваивается навсегда. Так что ваш CHAT_ID вычислить не сложно, впрочем, это и не является секретной информацией. Если боту будут писать несколько пользователей, то бот будет хранить несколько чатов, доступ к которым можно получить полностью зная BOT_TOKEN (и то там имеются ограничения, обозначенные абзацем выше). Самим же пользователям будет доступен изолированный чат с вашим ботом, они не смогут увидеть переписки друг друга.
	По умолчанию боты доступы через поиск телеграмм, а, соотвественно, им может написать кто угодно, создав новый чат. Так что будьте аккуратнее. Впрочем, без BOT_TOKEN к вашим личным перепискам с ботом получить вряд-ли удастся, просто появятся новые чаты, которые будет видно через BOT_TOKEN. Но при настройке бота я всё-таки советую внимательно относиться какой CHAT_ID вы вводите. Узнав свой CHAT_ID единажды, можно уже создавать ботов, писать /start, а затем без всяких там парсеров сразу задавать свои личные BOT_TOKEN и CHAT_ID, тем самым получаю полноценный доступ к переписке с ботом. Кстати, если боту задать CHAT_ID пользователя, который не писал этому боту, то бот не сможет связаться и выдаст ошибку. Ну и если бота заблокирует ранее написавший боту пользователь, то тоже будет ошибка.
EOF
}

show_instruction_bot() {
    cat << EOF
Инструкция по созданию бота в Телеграмм:
	1. Открыть Telegram и найти @BotFather. Либо, можно просто запустить чат с ботом по ссылке: https://telegram.me/botfather
	2. Начать чат с BotFather и следовать инструкциям для создания нового бота. Если написать /start, то бот отправит список поддерживаемых команд. Команда /newbot создаст нового бота, её и нужно ввести.
	3. «Alright, a new bot. How are we going to call it? Please choose a name for your bot.» - это предлагают выбрать имя для бота. Можно ввести любое, но нужно чтобы было уникальное.
	4. «Good. Now let's choose a username for your bot. It must end in 'bot'. Like this, for example: TetrisBot or tetris_bot.» - это предлагают ввести имя пользователя, которое будет использоваться для формирования ссылки на бота. Оно должно состоять из латинских символов, исключены пробелы. И самое главное, три последние буквы должны быть …bot.
	5. Когда бот будет создан, BotFather выдаст токен для доступа к API. Он будет написан в следущей строке после «Use this token access the HTTP API:». Если тапнуть на этот токен, то этот токен будет скопирован в буфер обмена.
	6. Необходимо написать несколько сообщений боту, чтобы скрипт смог извлечь ваш CHAT_ID.
EOF
}

# Получение данных для доступа к боту телеграмм.
get_data() {
  if [ -z "$BOT_TOKEN" ]; then
    show_instruction_bot
  elif [ -n "$BOT_TOKEN" ]; then
    # Проверяем корректность BOT_TOKEN
    response=$(curl -s "https://api.telegram.org/bot$BOT_TOKEN/getMe")
    
    if echo "$response" | grep -q '"ok":false'; then
      echo "Неверный BOT_TOKEN. Повторите ввод."
      show_instruction_bot
      BOT_TOKEN=""
    fi
  fi
  
  response=""
  local error=false
  
  while true; do
    if [ -z "$BOT_TOKEN" ]; then
      read -p "Токен бота (BOT_TOKEN): " BOT_TOKEN
    fi
    
    # Проверяем корректность BOT_TOKEN
    response=$(curl -s "https://api.telegram.org/bot$BOT_TOKEN/getMe")
    
    if echo "$response" | grep -q '"ok":false'; then
      echo "Неверный BOT_TOKEN. Повторите ввод."
      BOT_TOKEN=""
      continue
    fi
    
    if [ -z "$CHAT_ID" ]; then
      read -p "Введите идентификатор чата (CHAT_ID) (можно пропустить, нажав, Enter, если неизвестно): " CHAT_ID
    fi
    
    while [ -z "$CHAT_ID" ]; do
      # Получаем обновления от API Telegram
      response=$(curl -s "https://api.telegram.org/bot$BOT_TOKEN/getUpdates")
      
      # Проверяем успешность запроса
      if echo "$response" | grep -q '"ok":false'; then
        echo "Ошибка при получении обновлений от API Telegram. Проверьте правильность BOT_TOKEN."
        error=true
        break
      fi
      
      # Извлекаем последний CHAT_ID
      CHAT_ID=$(echo "$response" | jq -r '.result[-1].message.chat.id // empty')
      
      if [ -z "$CHAT_ID" ]; then
        if [ "$first_time" != "true" ]; then
          echo "Ожидается получение CHAT_ID… Для этого нужно написать боту сообщение. Как только CHAT_ID будет получен, скрипт продолжит свою работу…"
          first_time="true"
        fi
        sleep 10
      else
        break
      fi
    done
    
    if [ "$error" = false ]; then
      break
    fi
	
    error=false
    BOT_TOKEN=""
    CHAT_ID=""
    first_time=""
  done
}

install_tgbot() {
while true; do
		echo -n "Вероятно, Telegram Scripts for OpenWrt не установлен. Скачать и установить Telegram Scripts for OpenWrt? [Д/н]: "
		read answer
		case "$answer" in
			""|Д|д|Да|да|Y|y|Yes|yes)
				echo "Приложение и его поддержка доступна по адресу https://github.com/alexwbaule/telegramopenwrt. Автор установленного приложения https://github.com/alexwbaule. Разработчик установочнонастроечного скрипта не имеет отношения к Telegram Scripts for OpenWrt. Данный скрипт сейчас умеет только скачивать и устанавливать приложение Telegram Scripts for OpenWrt с официльного источника, а затем производить интеграцию в приложение данных вашего бота."
				opkg install $package_link
				break;;
			Н|н|Нет|нет|N|n|No|no)
				echo "Работа скрипта была завершена без внесений измнений. После самостоятельной установки приложения, например, с официального репозитория https://github.com/alexwbaule/telegramopenwrt вы можете снова запустить скрипт $0 для интеграции данных вашего телеграмм бота в приложение Telegram Scripts for OpenWrt, устанавливаемое по ссылке выше. Ну, либо самостоятельно можете редактировать файл $config_file после установки приложения."
				exit 0
				;;
			*)
			echo "Неправильный ввод. Попробуйте еще раз."
			continue
			;;
		esac
	done
}

write_data() {
# Не знаю достаточно ли перезапускать лишь сам сервис, но пока вроде работает корректно
/etc/init.d/telegram_bot stop
sed -i -E "/^(\s*option key\s+).*/ s//\1'$BOT_TOKEN'/; /^(\s*option my_chat_id\s+).*/ s//\1'$CHAT_ID'/" "$config_file"
/etc/init.d/telegram_bot start
}

# Погнали выполнять сам скрипт

# Инициализация и проверки. Присвоение первого аргумента, если он задан.

case "$1" in
  -h|--help)
    show_help
    exit 0;;
esac

checkPrograms
isRoot
check_install

BOT_TOKEN=$1
CHAT_ID=$2

# Блоки с действиями
if [ -z "$BOT_TOKEN" ] || [ -z "$CHAT_ID" ] ; then
get_data
fi
write_data

# Получаем список всех ID чатов, работает пока немного странно. Так, например, в некоторых запросах на curl выдаёт не полностью страницу, а лишь первое сообщение с ID первого чата, но которое было выполненено не позднее чем спустя несколько часов от выполнения запроса. 

chat_list=$(echo $response | jq -r '.result[] | (.message // .my_chat_member).chat.id // empty' | sort -u)

# Вывод данных и завершение работы скрипта
echo "Теперь YOUR BOT KEY на строчке $(grep -Fn "$BOT_TOKEN" "$config_file" | cut -d: -f1) присвоено значение $BOT_TOKEN, а ID OF THE CHAT на строчке $(grep -Fn "$CHAT_ID" "$config_file" | cut -d: -f1) получил значение $CHAT_ID. Эти данные по прежнему хранятся в файле "$config_file". Так нужно для использования бота скриптом. Все, кто сможет открыть файл и прочитать значение BOT_TOKEN - смогут тоже использовать бота.
Отмечу, что только пользователь с правами root сможет просматривать, изменять и исполнять файл "$config_file". Чтобы другой пользователь мог просмотреть содержимое файла "$config_file", ему потребуется переключиться на учетную запись root (например, с помощью команды sudo) или получить специальные привилегии, предоставленные администратором системы.
Список некоторых других чатов вашего бота, которые удалось обнаружить (каждый чат соотвествует ID пользователя, написавшего боту): $(echo "$chat_list" | tr '\n' ' ')"
exit 0